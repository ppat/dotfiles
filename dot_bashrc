# .bashrc

# shellcheck disable=SC2148
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

unset GIT_ASKPASS
unset GIT_SSH_COMMAND

set -o allexport
if [[ -e $HOME/.env ]]; then
  . $HOME/.env
fi
if [[ -e $HOME/.env.secrets ]]; then
  . $HOME/.env.secrets
fi
if [[ -e $HOME/.env.overrides ]]; then
  . $HOME/.env.overrides
fi
set +o allexport

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
#shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# save bash history when multiple shell sessions are open
# see: https://unix.stackexchange.com/a/48113
export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
export HISTSIZE=100000                   # big big history
export HISTFILESIZE=100000               # big big history
shopt -s histappend                      # append to history, don't overwrite it
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"  # Save & reload history after each command


# shellcheck disable=SC2016
if command -v mise &> /dev/null; then
  eval "$(mise activate bash)"
fi

# shellcheck disable=SC2016
if command -v starship &> /dev/null; then
  eval "$(starship init bash)"
fi

# add injected coder CLI to the PATH
if pgrep -f "coder agent" &> /dev/null; then
  CODER_CLI_LOCATION=$(dirname $(find /tmp/coder* -name coder -type f -executable))
  if [[ ! -z "${CODER_CLI_LOCATION}" ]]; then
    export PATH="${PATH}:${CODER_CLI_LOCATION}"
  fi
  unset CODER_CLI_LOCATION
fi

# source additional bash rc configuration
RC_FILES="$(find ${HOME}/.local/bash -type f)"
for file in ${RC_FILES}; do
  if [[ -r "$file" && -e "$file" && "$(basename $file)" != "load-env.sh" ]]; then
    source "$file"
  fi
done
unset RC_FILES
unset file
