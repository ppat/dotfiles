#!/usr/bin/env bash
set -euo pipefail

set -o allexport
{{ template "aqua.env" . -}}
set +o allexport


{{ template "script_header.sh" . }}

aqua_prerequisites() {
  log_info "Aqua | Initializing Aqua..."
  if ! command -v aqua > /dev/null; then
    log_error "Aqua | Aqua binary is not in path, cannot proceed!"
    exit 1
  fi
}

show_aqua_env() {
  log_info "Aqua | Using aqua env..."
  env | grep AQUA | sort | sed -E 's|^(.*)|    \1|g'
}

aqua_first_time_setup() {
  log_info "Aqua | Performing aqua first time setup..."
  mkdir -p $AQUA_ROOT_DIR
  cp {{ .chezmoi.sourceDir }}/private_dot_config/aquaproj-aqua/aqua.yaml $AQUA_ROOT_DIR/aqua.yaml
  cp {{ .chezmoi.sourceDir }}/private_dot_config/aquaproj-aqua/aqua-checksums.json $AQUA_ROOT_DIR/aqua-checksums.json
}

install_upgrade_aqua_packages() {
  log_info "Aqua | Installing or upgrading aqua packages..."
  aqua install --all 2>&1 | sed -E 's|^(.*)|  \1|g'
  log_success "Aqua | Aqua install is complete."
}

display_installed_packages() {
  log_info "Aqua | Display installed packages..."
  aqua list --installed --all | column -t 2>&1 | sed -E 's|^(.*)|  \1|g'
}

setup_chezmoi_dependencies() {
  local chezmoi_dependencies="$@"
  log_info "Aqua | Making chezmoi dependencies available without aqua..."
  mkdir -p $HOME/.local/bin
  aqua cp -o $HOME/.local/bin $chezmoi_dependencies
}

main() {
  aqua_prerequisites
  show_aqua_env
  echo
  if [[ ! -d "$AQUA_ROOT_DIR" ]]; then
    aqua_first_time_setup
  fi
  install_upgrade_aqua_packages
  echo
  display_installed_packages
  echo
  setup_chezmoi_dependencies bws
  echo "-------------------------------------------------------------------------------------------"
  echo
}

main
