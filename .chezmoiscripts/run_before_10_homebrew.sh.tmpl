#!/usr/bin/env bash
set -euo pipefail

set -o allexport
{{ template "homebrew.env" . -}}
set +o allexport
export PATH=${HOMEBREW_PREFIX}/opt/coreutils/libexec/gnubin:${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin:$PATH

{{ template "script_header.sh" . }}


show_homebrew_env() {
  log_info "Homebrew | Using homebrew env..."
  env | grep HOMEBREW | sort | sed -E -n 's|^|    |p'
}

manage_homebrew_package_manager() {
  if ! command -v brew &> /dev/null; then
    log_info "Homebrew | Installing Homebrew package manager..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" 2>&1 | sed -E -n 's|^|    |p'
    log_success "Homebrew | Homebrew package manager install completed."
  else
    log_info "Homebrew | Homebrew package manager already exists, updating..."
    brew update 2>&1 | sed -E -n 's|^|    |p'
    log_success "Homebrew | Homebrew package manager has been updated."
  fi
}

manage_homebrew_system_packages() {
  local brew_file="$1"
  log_info "Homebrew | Installing Homebrew system packages..."
  if ! command -v brew > /dev/null; then
    log_error "Homebrew | Brew binary is not in path, cannot proceed!"
    exit 1
  fi
  brew bundle --file="${brew_file}" 2>&1 | sed -E -n 's|^|    |g'
  log_success "Homebrew | Homebrew system packages have been installed."
}

main() {
  show_homebrew_env
  echo
  manage_homebrew_package_manager
  echo
  manage_homebrew_system_packages "{{ .chezmoi.sourceDir }}/Brewfile.system.{{ .chezmoi.os }}"
  echo "-------------------------------------------------------------------------------------------"
  echo
}

main
