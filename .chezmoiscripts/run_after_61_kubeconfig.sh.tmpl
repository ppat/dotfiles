#!/usr/bin/env bash
set -euo pipefail

{{ template "script_header.sh" . }}

configure_cluster() {
  if [[ ! -e ~/.kube/certs/isrgrootx1.pem ]]; then
    mkdir -p ~/.kube/certs
    curl -o ~/.kube/certs/isrgrootx1.pem https://letsencrypt.org/certs/isrgrootx1.pem
  fi
  local cluster_name="$1"
  local domain_name="$2"
  local expected_url="https://kubernetes-api.${cluster_name}.${domain_name}"

  # Use || true to handle JSONPath errors gracefully
  local actual_url=$(kubectl config view -o jsonpath='{.clusters[?(@.name == "'${cluster_name}'")].cluster.server}' 2>/dev/null || echo "")
  if [[ "${actual_url}" != "${expected_url}" ]]; then
    log_info "KubeConfig | Configuring cluster ${cluster_name}..."
    kubectl config set-cluster $cluster_name \
      --certificate-authority=$HOME/.kube/certs/isrgrootx1.pem \
      --server=$expected_url
  fi
}

configure_user() {
  local cluster_name="$1"
  local domain_name="$2"
  local client_id="$3"
  local client_secret="$4"
  local expected_username="oidc-${cluster_name}"

  # Use || true to handle JSONPath errors gracefully
  local actual_username=$(kubectl config view -o jsonpath='{.users[?(@.name == "'${expected_username}'")].name}' 2>/dev/null || echo "")
  if [[ "${actual_username}" != "${expected_username}" ]]; then
    log_info "KubeConfig | Configuring user for ${cluster_name} cluster..."
    kubectl config set-credentials $expected_username \
      --exec-api-version=client.authentication.k8s.io/v1 \
      --exec-interactive-mode=Never \
      --exec-command=kubectl \
      --exec-arg=oidc-login \
      --exec-arg=get-token \
      --exec-arg="--oidc-issuer-url=https://auth.homelab.${domain_name}/application/o/kubernetes-${cluster_name}/" \
      --exec-arg="--oidc-client-id=${client_id}" \
      --exec-arg="--oidc-client-secret=${client_secret}" \
      --exec-arg="--oidc-extra-scope=profile" \
      --exec-arg="--oidc-extra-scope=email" \
      --exec-arg="--skip-open-browser=true"
  fi
}

configure_context() {
  local cluster_name="$1"

  # Use || true to handle JSONPath errors gracefully
  local actual_context=$(kubectl config view -o jsonpath='{.contexts[?(@.name == "'${cluster_name}'")].name}' 2>/dev/null || echo "")
  if [[ "${actual_context}" != "${cluster_name}" ]]; then
    log_info "KubeConfig | Configuring context for ${cluster_name} cluster..."
    kubectl config set-context ${cluster_name} --user=oidc-${cluster_name} --cluster=${cluster_name}
  fi
}

if [[ ! -d ~/.kube ]]; then
  mkdir ~/.kube
fi

configure_cluster homelab $DOMAIN_NAME
configure_cluster nas $DOMAIN_NAME
configure_user homelab $DOMAIN_NAME $OIDC_K8S_HOMELAB_CLIENTID $OIDC_K8S_HOMELAB_CLIENTSECRET
configure_user nas $DOMAIN_NAME $OIDC_K8S_NAS_CLIENTID $OIDC_K8S_NAS_CLIENTSECRET
configure_context homelab
configure_context nas

# Handle the case where current-context might not be set
current_context=$(kubectl config current-context 2>/dev/null || echo "")
if [[ "${current_context}" == "" ]]; then
  log_info "KubeConfig | Setting default context..."
  kubectl config use-context homelab
fi

echo "-------------------------------------------------------------------------------------------"
echo
